{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [restaurantList, setRestaurantList] = useState([]);\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        const response = await fetch('http://localhost:8001/api/addrestaurant', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(response);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchRestaurantData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4\",\n        children: \"Restaurant List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: restaurantList.map(restaurant => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: restaurant.restaurantName\n        }, restaurant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n\n        // Add more details you want to display for each restaurant\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"jP3lfxgotQ0WduuRjPwZW2ne2tc=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","jsxDEV","_jsxDEV","Display","_s","restaurantList","setRestaurantList","fetchRestaurantData","response","fetch","method","headers","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","restaurantName","id","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/components/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nconst Display = () => {\r\n  const [restaurantList, setRestaurantList] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchRestaurantData = async () => {\r\n         try {\r\n           \r\n      \r\n              const response = await fetch('http://localhost:8001/api/addrestaurant', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n              }\r\n              );\r\n              console.log(response);\r\n            }\r\n            catch (error) {\r\n                console.error('Error:', error);\r\n               \r\n              } \r\n    };\r\n\r\n    fetchRestaurantData();\r\n  }, []); // Empty dependency array to run the effect only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n     \r\n\r\n      <div className=\"container\">\r\n        <h1 className=\"mt-4\">Restaurant List</h1>\r\n        <ul>\r\n\r\n          {restaurantList.map((restaurant) => (\r\n            <li key={restaurant.id}>{restaurant.restaurantName}</li>\r\n\r\n            // Add more details you want to display for each restaurant\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IAEd,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QAGC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UACtEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACA,CAAC;QACDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACvB,CAAC,CACD,OAAOM,KAAK,EAAE;QACVF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAEhC;IACV,CAAC;IAEDP,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAa,QAAA,eAGEb,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBb,OAAA;QAAIc,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzClB,OAAA;QAAAa,QAAA,EAEGV,cAAc,CAACgB,GAAG,CAAEC,UAAU,iBAC7BpB,OAAA;UAAAa,QAAA,EAAyBO,UAAU,CAACC;QAAc,GAAzCD,UAAU,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC;;QAEvD;QACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9CID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAgDb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}