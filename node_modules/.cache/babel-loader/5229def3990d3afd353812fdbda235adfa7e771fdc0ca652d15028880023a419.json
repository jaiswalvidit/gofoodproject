{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\screens\\\\RestaurantDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RestaurantDetail = () => {\n  _s();\n  const {\n    _id\n  } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8001/api/addRestaurant/${_id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n\n          // Check if data is an array, if not, put it into an array\n          const dataArray = Array.isArray(data) ? data : [data];\n\n          // Assuming you want to set the first item in the array as the restaurant\n          setRestaurant(dataArray[0]);\n        } else {\n          console.error('Error:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchRestaurantData();\n  }, [_id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4\",\n        children: \"Restaurant Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), restaurant && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: restaurant.restaurantName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: restaurant.areaName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [restaurant.Rating, \" - \", restaurant.areaName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Availability: \", restaurant.availability ? 'Open' : 'Closed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cuisines: \", restaurant.cuisines.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lists:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: restaurant.lists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [list.itemName, \" - \", list.category]\n          }, list._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RestaurantDetail, \"jbZ/TrJjlquE6ccY3znNawHX+Bw=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantDetail;\nexport default RestaurantDetail;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetail\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","RestaurantDetail","_s","_id","restaurant","setRestaurant","fetchRestaurantData","response","fetch","method","headers","ok","data","json","dataArray","Array","isArray","console","error","status","statusText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","restaurantName","areaName","Rating","availability","cuisines","join","lists","map","list","itemName","category","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/screens/RestaurantDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst RestaurantDetail = () => {\r\n  const { _id } = useParams();\r\n  const [restaurant, setRestaurant] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurantData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8001/api/addRestaurant/${_id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n\r\n          // Check if data is an array, if not, put it into an array\r\n          const dataArray = Array.isArray(data) ? data : [data];\r\n\r\n          // Assuming you want to set the first item in the array as the restaurant\r\n          setRestaurant(dataArray[0]);\r\n        } else {\r\n          console.error('Error:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchRestaurantData();\r\n  }, [_id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-4\">\r\n        <h1 className=\"mt-4\">Restaurant Detail</h1>\r\n        {restaurant && (\r\n          <>\r\n            <h2>{restaurant.restaurantName}</h2>\r\n            <p>{restaurant.areaName}</p>\r\n            <p>{restaurant.Rating} - {restaurant.areaName}</p>\r\n            <p>Availability: {restaurant.availability ? 'Open' : 'Closed'}</p>\r\n            <p>Cuisines: {restaurant.cuisines.join(', ')}</p>\r\n\r\n            <h3>Lists:</h3>\r\n            <ul>\r\n              {restaurant.lists.map((list) => (\r\n                <li key={list._id}>\r\n                  {/* Render content for each item in the 'lists' array */}\r\n                  {list.itemName} - {list.category}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}