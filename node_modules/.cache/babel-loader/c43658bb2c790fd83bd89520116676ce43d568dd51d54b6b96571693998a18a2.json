{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\screens\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { IMAGE_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyOrder() {\n  _s();\n  // const [orderData, setOrderData] = useState({ email: '', products: [] });\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMyOrder = async () => {\n      try {\n        const userEmail = localStorage.getItem('userEmail');\n        const response = await fetch(`http://localhost:8001/api/myOrderData?email=${userEmail}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(response);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          setOrderData(data.orderData[0] || {\n            email: '',\n            products: []\n          });\n        } else {\n          console.error('Fetch failed with status:', response.status);\n          setError('Failed to fetch data');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        setError('An unexpected error occurred');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMyOrder();\n  }, []);\n\n  // // Styles\n  // const cardStyle = {\n  //   backgroundColor: '#343a40',\n  //   color: 'white',\n  //   padding: '1rem',\n  //   borderRadius: '10px',\n  //   margin: '2px',\n  // };\n\n  // const productCardStyle = {\n  //   backgroundColor: '#ffc107',\n  //   padding: '1rem',\n  //   display: 'flex',\n  //   justifyContent: 'space-between',\n  // };\n\n  // const dateStyle = {\n  //   fontSize: '1rem',\n  //   color: 'rgba(255, 255, 255, 0.8)',\n  //   textAlign: 'center',\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'rgba(255, 255, 0, 0.1)'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: \"console.log(data);\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(MyOrder, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyOrder;\nvar _c;\n$RefreshReg$(_c, \"MyOrder\");","map":{"version":3,"names":["React","useEffect","useState","IMAGE_URL","jsxDEV","_jsxDEV","MyOrder","_s","fetchMyOrder","userEmail","localStorage","getItem","response","fetch","method","headers","console","log","ok","data","json","setOrderData","orderData","email","products","error","status","setError","setLoading","style","background","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/screens/MyOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { IMAGE_URL } from '../constants';\r\n\r\nexport default function MyOrder() {\r\n  // const [orderData, setOrderData] = useState({ email: '', products: [] });\r\n  // const [loading, setLoading] = useState(true);\r\n  // const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMyOrder = async () => {\r\n      try {\r\n        const userEmail = localStorage.getItem('userEmail');\r\n\r\n        const response = await fetch(`http://localhost:8001/api/myOrderData?email=${userEmail}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        console.log(response);\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(data);\r\n          setOrderData(data.orderData[0] || { email: '', products: [] });\r\n        } else \r\n        {\r\n          console.error('Fetch failed with status:', response.status);\r\n          setError('Failed to fetch data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setError('An unexpected error occurred');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMyOrder();\r\n  }, []);\r\n\r\n  // // Styles\r\n  // const cardStyle = {\r\n  //   backgroundColor: '#343a40',\r\n  //   color: 'white',\r\n  //   padding: '1rem',\r\n  //   borderRadius: '10px',\r\n  //   margin: '2px',\r\n  // };\r\n\r\n  // const productCardStyle = {\r\n  //   backgroundColor: '#ffc107',\r\n  //   padding: '1rem',\r\n  //   display: 'flex',\r\n  //   justifyContent: 'space-between',\r\n  // };\r\n\r\n  // const dateStyle = {\r\n  //   fontSize: '1rem',\r\n  //   color: 'rgba(255, 255, 255, 0.8)',\r\n  //   textAlign: 'center',\r\n  // };\r\n\r\n  return (\r\n    <div style={{ background: 'rgba(255, 255, 0, 0.1)' }}>\r\n      <div className=\"container my-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            console.log(data);\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACA;EACA;;EAEAN,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAEnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CJ,SAAU,EAAC,EAAE;UACvFK,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;QAErB,IAAIA,QAAQ,CAACM,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UAClCJ,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;UACjBE,YAAY,CAACF,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC,IAAI;YAAEC,KAAK,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAG,CAAC,CAAC;QAChE,CAAC,MACD;UACER,OAAO,CAACS,KAAK,CAAC,2BAA2B,EAAEb,QAAQ,CAACc,MAAM,CAAC;UAC3DC,QAAQ,CAAC,sBAAsB,CAAC;QAClC;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BE,QAAQ,CAAC,8BAA8B,CAAC;MAC1C,CAAC,SAAS;QACRC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDpB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA;IAAKwB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAyB,CAAE;IAAAC,QAAA,eACnD1B,OAAA;MAAK2B,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7B1B,OAAA;QAAK2B,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClB1B,OAAA;UAAK2B,SAAS,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAGxB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAAC7B,EAAA,CAzEuBD,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}