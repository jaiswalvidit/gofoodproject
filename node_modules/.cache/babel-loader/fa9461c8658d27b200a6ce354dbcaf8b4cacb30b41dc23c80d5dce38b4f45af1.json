{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import Navbar from './Navbar';\n// import Footer from './Footer';\n// ... (imports)\n// ... (imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [restaurantList, setRestaurantList] = useState([]);\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        const response = await fetch('http://localhost:8001/api/addrestaurant', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setRestaurantList(data);\n        } else {\n          console.error('Error:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchRestaurantData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4\",\n        children: \"Restaurant List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: restaurantList.map(restaurant => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card dark \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [restaurant.restaurantName, \" - \", restaurant.areaName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [restaurant.Rating, \" - \", restaurant.availability ? \"true\" : \"false\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, restaurant._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n        // Add more details you want to display for each restaurant\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(Display, \"jP3lfxgotQ0WduuRjPwZW2ne2tc=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Display","_s","restaurantList","setRestaurantList","fetchRestaurantData","response","fetch","method","headers","ok","data","json","console","error","status","statusText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","restaurantName","areaName","Rating","availability","_id","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/components/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import Navbar from './Navbar';\r\n// import Footer from './Footer';\r\n// ... (imports)\r\n// ... (imports)\r\n\r\nconst Display = () => {\r\n    const [restaurantList, setRestaurantList] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchRestaurantData = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:8001/api/addrestaurant', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n  \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setRestaurantList(data);\r\n          } else {\r\n            console.error('Error:', response.status, response.statusText);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      };\r\n  \r\n      fetchRestaurantData();\r\n    }, []); // Empty dependency array to run the effect only once when the component mounts\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <h1 className=\"mt-4\">Restaurant List</h1>\r\n          <ul>\r\n            {restaurantList.map((restaurant) => (\r\n              <li key={restaurant._id}>\r\n                <div className=\"card dark \">\r\n                  <h1>{restaurant.restaurantName} - {restaurant.areaName}</h1>\r\n                  <p>{restaurant.Rating} - {restaurant.availability ? \"true\" : \"false\"}</p>\r\n                </div>\r\n              </li>\r\n              // Add more details you want to display for each restaurant\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Display;\r\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMO,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UACtEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCR,iBAAiB,CAACO,IAAI,CAAC;QACzB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAER,QAAQ,CAACS,MAAM,EAAET,QAAQ,CAACU,UAAU,CAAC;QAC/D;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBjB,OAAA;QAAIkB,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCtB,OAAA;QAAAiB,QAAA,EACGd,cAAc,CAACoB,GAAG,CAAEC,UAAU,iBAC7BxB,OAAA;UAAAiB,QAAA,eACEjB,OAAA;YAAKkB,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACzBjB,OAAA;cAAAiB,QAAA,GAAKO,UAAU,CAACC,cAAc,EAAC,KAAG,EAACD,UAAU,CAACE,QAAQ;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5DtB,OAAA;cAAAiB,QAAA,GAAIO,UAAU,CAACG,MAAM,EAAC,KAAG,EAACH,UAAU,CAACI,YAAY,GAAG,MAAM,GAAG,OAAO;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE;QAAC,GAJCE,UAAU,CAACK,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKnB;QACJ;QACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7CED,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA+CX,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}