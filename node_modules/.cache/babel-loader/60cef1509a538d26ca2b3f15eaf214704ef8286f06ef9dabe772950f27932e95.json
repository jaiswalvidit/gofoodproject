{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\components\\\\addItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./additem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddItemForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    itemName: 'Pasta Alfredo',\n    cloudinaryImageId: 'image3',\n    category: 'Pasta',\n    parentName: '',\n    Rating: 5,\n    cost: 1,\n    availability: true,\n    description: 'optional'\n  });\n  const [parentOptions, setParentOptions] = useState([]);\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await fetch('http://localhost:8001/api/auth/addrestaurant');\n        const data = await response.json();\n        const restaurantNames = data.map(restaurant => restaurant.restaurantName);\n        setParentOptions(restaurantNames);\n      } catch (error) {\n        console.error('Error fetching restaurant names:', error.message);\n      }\n    };\n    fetchRestaurants();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'number' ? parseFloat(value) : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8001/api/auth/createItem', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        console.error(`Request failed with status ${response.status}`);\n        return;\n      }\n      const json = await response.json();\n      console.log('API Response:', json);\n      setFormData({\n        itemName: '',\n        cloudinaryImageId: '',\n        category: '',\n        parentName: '',\n        Rating: '',\n        cost: '',\n        availability: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 text-center text-primary\",\n        children: \"Add a New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: ['itemName', 'cloudinaryImageId', 'cost'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: field,\n                className: \"form-label fw-bold\",\n                children: field === 'itemName' ? 'Item Name' : field.charAt(0).toUpperCase() + field.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: field,\n                value: formData[field],\n                onChange: handleChange,\n                className: \"form-control\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, field, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: ['description', 'category', 'parentName', 'Rating', 'availability'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [field !== 'availability' && /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: field,\n                className: \"form-label fw-bold\",\n                children: field.charAt(0).toUpperCase() + field.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), field === 'parentName' ? /*#__PURE__*/_jsxDEV(\"select\", {\n                name: field,\n                value: formData[field],\n                onChange: handleChange,\n                className: \"form-select\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Select a restaurant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), parentOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option,\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: field === 'Rating' ? 'number' : 'text',\n                name: field,\n                value: formData[field],\n                onChange: handleChange,\n                className: \"form-control\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, field, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AddItemForm, \"nMdavQtY+JHKzLqBxlXmVc2ljXQ=\");\n_c = AddItemForm;\nexport default AddItemForm;\nvar _c;\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddItemForm","_s","formData","setFormData","itemName","cloudinaryImageId","category","parentName","Rating","cost","availability","description","parentOptions","setParentOptions","fetchRestaurants","response","fetch","data","json","restaurantNames","map","restaurant","restaurantName","error","console","message","handleChange","e","name","value","type","target","prevData","parseFloat","handleSubmit","preventDefault","method","headers","body","JSON","stringify","ok","status","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","field","htmlFor","charAt","toUpperCase","slice","onChange","required","disabled","option","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/components/addItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./additem.css\";\r\n\r\nconst AddItemForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    itemName: 'Pasta Alfredo',\r\n    cloudinaryImageId: 'image3',\r\n    category: 'Pasta',\r\n    parentName: '',\r\n    Rating: 5,\r\n    cost: 1,\r\n    availability: true,\r\n    description: 'optional',\r\n  });\r\n\r\n  const [parentOptions, setParentOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurants = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8001/api/auth/addrestaurant');\r\n        const data = await response.json();\r\n        const restaurantNames = data.map((restaurant) => restaurant.restaurantName);\r\n        setParentOptions(restaurantNames);\r\n      } catch (error) {\r\n        console.error('Error fetching restaurant names:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchRestaurants();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'number' ? parseFloat(value) : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8001/api/auth/createItem', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(`Request failed with status ${response.status}`);\r\n        return;\r\n      }\r\n\r\n      const json = await response.json();\r\n      console.log('API Response:', json);\r\n\r\n      setFormData({\r\n        itemName: '',\r\n        cloudinaryImageId: '',\r\n        category: '',\r\n        parentName: '',\r\n        Rating: '',\r\n        cost: '',\r\n        availability: '',\r\n        description: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <h2 className=\"mb-4 text-center text-primary\">Add a New Item</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              {/* First Column */}\r\n              {['itemName', 'cloudinaryImageId', 'cost'].map((field) => (\r\n                <div key={field} className=\"mb-3\">\r\n                  <label htmlFor={field} className=\"form-label fw-bold\">\r\n                    {field === 'itemName' ? 'Item Name' : field.charAt(0).toUpperCase() + field.slice(1)}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name={field}\r\n                    value={formData[field]}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                    required\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              {/* Second Column */}\r\n              {['description', 'category', 'parentName', 'Rating', 'availability'].map((field) => (\r\n                <div key={field} className=\"mb-3\">\r\n                  {field !== 'availability' && (\r\n                    <label htmlFor={field} className=\"form-label fw-bold\">\r\n                      {field.charAt(0).toUpperCase() + field.slice(1)}\r\n                    </label>\r\n                  )}\r\n                  {field === 'parentName' ? (\r\n                    <select\r\n                      name={field}\r\n                      value={formData[field]}\r\n                      onChange={handleChange}\r\n                      className=\"form-select\"\r\n                      required\r\n                    >\r\n                      <option value=\"\" disabled>Select a restaurant</option>\r\n                      {parentOptions.map((option) => (\r\n                        <option key={option} value={option}>{option}</option>\r\n                      ))}\r\n                    </select>\r\n                  ) : (\r\n                    <input\r\n                      type={field === 'Rating' ? 'number' : 'text'}\r\n                      name={field}\r\n                      value={formData[field]}\r\n                      onChange={handleChange}\r\n                      className=\"form-control\"\r\n                      required\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add Item\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItemForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}