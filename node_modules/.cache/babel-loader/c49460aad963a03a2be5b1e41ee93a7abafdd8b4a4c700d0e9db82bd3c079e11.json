{"ast":null,"code":"import _slicedToArray from\"D:/food_app/mernapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"D:/food_app/mernapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/food_app/mernapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{createContext,useContext,useReducer}from'react';// import { IMAGE_URL } from '../constants';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var cartStateContext=/*#__PURE__*/createContext();var cartDispatchContext=/*#__PURE__*/createContext();var reducer=function reducer(state,action){switch(action.type){case\"ADD\":return[].concat(_toConsumableArray(state),[{id:action.id,Name:action.name,qty:action.qty,imageId:action.imageId||'defaultImageId',// Provide a default value\nprice:action.price,description:action.description}]);case\"REMOVE\":var newArr=_toConsumableArray(state);newArr.splice(action.index,1);return newArr;case\"UPDATE\":return state.map(function(food){if(food.id===action.id){return _objectSpread(_objectSpread({},food),{},{qty:parseInt(action.qty)+food.qty,price:action.price+food.price});}return food;});case\"DROP\":return[];default:console.log(\"Error in Reducer\");return state;}};export var CartProvider=function CartProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,[]),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(cartDispatchContext.Provider,{value:dispatch,children:/*#__PURE__*/_jsx(cartStateContext.Provider,{value:state,children:children})});};export var useCart=function useCart(){return useContext(cartStateContext);};export var useDispatchCart=function useDispatchCart(){return useContext(cartDispatchContext);};","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","cartStateContext","cartDispatchContext","reducer","state","action","type","concat","_toConsumableArray","id","Name","name","qty","imageId","price","description","newArr","splice","index","map","food","_objectSpread","parseInt","console","log","CartProvider","_ref","children","_useReducer","_useReducer2","_slicedToArray","dispatch","Provider","value","useCart","useDispatchCart"],"sources":["D:/food_app/mernapp/src/components/ContextReducer.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n// import { IMAGE_URL } from '../constants';\r\n\r\nconst cartStateContext = createContext();\r\nconst cartDispatchContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          Name: action.name,\r\n          qty: action.qty,\r\n          imageId: action.imageId || 'defaultImageId', // Provide a default value\r\n          price: action.price,\r\n          description:action.description,\r\n        }\r\n      ];\r\n    \r\n\r\n    case \"REMOVE\":\r\n      let newArr = [...state];\r\n      newArr.splice(action.index, 1);\r\n      return newArr;\r\n\r\n    case \"UPDATE\":\r\n      return state.map((food) => {\r\n        if (food.id === action.id) {\r\n          return {\r\n            ...food,\r\n            qty: parseInt(action.qty) + food.qty,\r\n            price: action.price + food.price\r\n          };\r\n        }\r\n        return food;\r\n      });\r\n\r\n    case \"DROP\":\r\n      return [];\r\n\r\n    default:\r\n      console.log(\"Error in Reducer\");\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, []);\r\n\r\n  return (\r\n    <cartDispatchContext.Provider value={dispatch}>\r\n      <cartStateContext.Provider value={state}>\r\n        {children}\r\n      </cartStateContext.Provider>\r\n    </cartDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(cartStateContext);\r\nexport const useDispatchCart = () => useContext(cartDispatchContext);\r\n"],"mappings":"kUAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAQ,OAAO,CACpE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,GAAM,CAAAC,gBAAgB,cAAGL,aAAa,CAAC,CAAC,CACxC,GAAM,CAAAM,mBAAmB,cAAGN,aAAa,CAAC,CAAC,CAE3C,GAAM,CAAAO,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACjC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,KAAK,CACR,SAAAC,MAAA,CAAAC,kBAAA,CACKJ,KAAK,GACR,CACEK,EAAE,CAAEJ,MAAM,CAACI,EAAE,CACbC,IAAI,CAAEL,MAAM,CAACM,IAAI,CACjBC,GAAG,CAAEP,MAAM,CAACO,GAAG,CACfC,OAAO,CAAER,MAAM,CAACQ,OAAO,EAAI,gBAAgB,CAAE;AAC7CC,KAAK,CAAET,MAAM,CAACS,KAAK,CACnBC,WAAW,CAACV,MAAM,CAACU,WACrB,CAAC,GAIL,IAAK,QAAQ,CACX,GAAI,CAAAC,MAAM,CAAAR,kBAAA,CAAOJ,KAAK,CAAC,CACvBY,MAAM,CAACC,MAAM,CAACZ,MAAM,CAACa,KAAK,CAAE,CAAC,CAAC,CAC9B,MAAO,CAAAF,MAAM,CAEf,IAAK,QAAQ,CACX,MAAO,CAAAZ,KAAK,CAACe,GAAG,CAAC,SAACC,IAAI,CAAK,CACzB,GAAIA,IAAI,CAACX,EAAE,GAAKJ,MAAM,CAACI,EAAE,CAAE,CACzB,OAAAY,aAAA,CAAAA,aAAA,IACKD,IAAI,MACPR,GAAG,CAAEU,QAAQ,CAACjB,MAAM,CAACO,GAAG,CAAC,CAAGQ,IAAI,CAACR,GAAG,CACpCE,KAAK,CAAET,MAAM,CAACS,KAAK,CAAGM,IAAI,CAACN,KAAK,GAEpC,CACA,MAAO,CAAAM,IAAI,CACb,CAAC,CAAC,CAEJ,IAAK,MAAM,CACT,MAAO,EAAE,CAEX,QACEG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAC/B,MAAO,CAAApB,KAAK,CAChB,CACF,CAAC,CAED,MAAO,IAAM,CAAAqB,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACrC,IAAAC,WAAA,CAA0B9B,UAAU,CAACK,OAAO,CAAE,EAAE,CAAC,CAAA0B,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAA1CxB,KAAK,CAAAyB,YAAA,IAAEE,QAAQ,CAAAF,YAAA,IAEtB,mBACE7B,IAAA,CAACE,mBAAmB,CAAC8B,QAAQ,EAACC,KAAK,CAAEF,QAAS,CAAAJ,QAAA,cAC5C3B,IAAA,CAACC,gBAAgB,CAAC+B,QAAQ,EAACC,KAAK,CAAE7B,KAAM,CAAAuB,QAAA,CACrCA,QAAQ,CACgB,CAAC,CACA,CAAC,CAEnC,CAAC,CAED,MAAO,IAAM,CAAAO,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,QAAS,CAAArC,UAAU,CAACI,gBAAgB,CAAC,GACzD,MAAO,IAAM,CAAAkC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,QAAS,CAAAtC,UAAU,CAACK,mBAAmB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}