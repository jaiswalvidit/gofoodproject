{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\screens\\\\RestaurantDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantDetail = () => {\n  _s();\n  const {\n    _id\n  } = useParams();\n  const [restaurantList, setRestaurantList] = useState([]);\n  // /api/restaurants/${restaurantId}cancelIdleCallback\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8001/api/addRestaurant/${_id}?populate=lists`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(_id);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          setRestaurantList(data);\n        } else {\n          console.error('Error:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchRestaurantData();\n  }, [parentId]); // Include parentId in the dependency array to re-run the effect when parentId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4\",\n        children: \"Restaurant List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\",\n        children: restaurantList.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/display/${restaurant.parentId}`,\n            className: \"text-decoration-none\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card h-100 bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Items:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: restaurant.lists.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: item.itemName\n                  }, item._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 15\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"card-title\",\n                  children: restaurant.restaurantName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: restaurant.areaName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [restaurant.Rating, \" - \", restaurant.availability ? \"Open\" : \"Closed\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [restaurant.DeliveryTime, \" mins - \", restaurant.cuisines]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, restaurant._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantDetail, \"sc5AE9EahPh5WqKxJaJsGKDO4eg=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantDetail;\nexport default RestaurantDetail;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetail\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","jsxDEV","_jsxDEV","RestaurantDetail","_s","_id","restaurantList","setRestaurantList","fetchRestaurantData","response","fetch","method","headers","console","log","ok","data","json","error","status","statusText","parentId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","to","lists","item","itemName","restaurantName","areaName","Rating","availability","DeliveryTime","cuisines","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/screens/RestaurantDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst RestaurantDetail = () => {\r\n  const { _id } = useParams();\r\n  const [restaurantList, setRestaurantList] = useState([]);\r\n  // /api/restaurants/${restaurantId}cancelIdleCallback\r\n  useEffect(() => {\r\n    const fetchRestaurantData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8001/api/addRestaurant/${_id}?populate=lists`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        console.log(_id);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(data);\r\n          setRestaurantList(data);\r\n        } else {\r\n          console.error('Error:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchRestaurantData();\r\n  }, [parentId]); // Include parentId in the dependency array to re-run the effect when parentId changes\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-4\">\r\n        <h1 className=\"mt-4\">Restaurant List</h1>\r\n        \r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n          {restaurantList.map((restaurant) => (\r\n            <div key={restaurant._id} className=\"col\">\r\n              <Link to={`/display/${restaurant.parentId}`} className=\"text-decoration-none\">\r\n                <div className=\"card h-100 bg-danger text-white\">\r\n                  <div className=\"card-body\">\r\n                  <h3>Items:</h3>\r\n          <ul>\r\n            {restaurant.lists.map((item) => (\r\n              <li key={item._id}>{item.itemName}</li>\r\n            ))}\r\n          </ul>\r\n                    <h1 className=\"card-title\">{restaurant.restaurantName}</h1>\r\n                    <p className=\"card-text\">{restaurant.areaName}</p>\r\n                    <p className=\"card-text\">{restaurant.Rating} - {restaurant.availability ? \"Open\" : \"Closed\"}</p>\r\n                    <p className=\"card-text\">{restaurant.DeliveryTime} mins - {restaurant.cuisines}</p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}