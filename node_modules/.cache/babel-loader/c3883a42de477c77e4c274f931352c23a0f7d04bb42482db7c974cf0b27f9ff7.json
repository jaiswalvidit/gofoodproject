{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n// ... (any other imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [restaurantList, setRestaurantList] = useState([]);\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        const response = await fetch('http://localhost:8001/api/addrestaurant', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setRestaurantList(data);\n        } else {\n          console.error('Error:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchRestaurantData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4\",\n        children: \"Restaurant List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), restaurantList.size(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"jP3lfxgotQ0WduuRjPwZW2ne2tc=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Display","_s","restaurantList","setRestaurantList","fetchRestaurantData","response","fetch","method","headers","ok","data","json","console","error","status","statusText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/components/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\r\n// ... (any other imports)\r\n\r\nconst Display = () => {\r\n  const [restaurantList, setRestaurantList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurantData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8001/api/addrestaurant', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setRestaurantList(data);\r\n        } else {\r\n          console.error('Error:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchRestaurantData();\r\n  }, []); // Empty dependency array to run the effect only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-4\">\r\n        <h1 className=\"mt-4\">Restaurant List</h1>\r\n        {restaurantList.size()}\r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n          {/* {restaurantList.map((restaurant) => (\r\n            <div key={restaurant._id} className=\"col\">\r\n              {/* Wrap the contents in a Link tag */}\r\n              {/* <Link to={\"/display/\"+restaurant.parentId} className=\"text-decoration-none\">\r\n                <div className=\"card h-100 bg-danger text-white\">\r\n                  <div className=\"card-body\">\r\n                    <h1 className=\"card-title\">{restaurant.restaurantName}</h1>\r\n                    <p className=\"card-text\">{restaurant.areaName}</p>\r\n                    <p className=\"card-text\">{restaurant.Rating} - {restaurant.availability ? \"Open\" : \"Closed\"}</p>\r\n                    <p className=\"card-text\">{restaurant.DeliveryTime} mins - {restaurant.cuisines}</p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          // ))} */} \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,OAAO,sCAAsC,CAAC,CAAC;AAC/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UACtEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCR,iBAAiB,CAACO,IAAI,CAAC;QACzB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAER,QAAQ,CAACS,MAAM,EAAET,QAAQ,CAACU,UAAU,CAAC;QAC/D;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BjB,OAAA;QAAIkB,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxCnB,cAAc,CAACoB,IAAI,CAAC,CAAC,eACtBvB,OAAA;QAAKkB,SAAS,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgB5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CApDID,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}