{"ast":null,"code":"var _jsxFileName = \"D:\\\\food_app\\\\mernapp\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RestaurantCard from './RestaurantCard'; // Import the RestaurantCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [restaurantList, setRestaurantList] = useState([]);\n  useEffect(() => {\n    const fetchRestaurantData = async () => {\n      try {\n        const response = await fetch('http://localhost:8001/api/addRestaurant/', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (Array.isArray(data)) {\n            setRestaurantList(data);\n          } else {\n            console.error('Error: Response data is not an array');\n          }\n        } else {\n          console.error('Error:', response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchRestaurantData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-4\",\n        children: \"Restaurant List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: restaurantList.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/display/\" + restaurant._id,\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(RestaurantCard, {\n                resData: restaurant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, restaurant._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"jP3lfxgotQ0WduuRjPwZW2ne2tc=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","Link","RestaurantCard","jsxDEV","_jsxDEV","Display","_s","restaurantList","setRestaurantList","fetchRestaurantData","response","fetch","method","headers","ok","data","json","Array","isArray","console","error","status","statusText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","to","_id","style","textDecoration","resData","_c","$RefreshReg$"],"sources":["D:/food_app/mernapp/src/components/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport RestaurantCard from './RestaurantCard'; // Import the RestaurantCard component\r\n\r\nconst Display = () => {\r\n  const [restaurantList, setRestaurantList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurantData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8001/api/addRestaurant/', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n\r\n          if (Array.isArray(data)) {\r\n            setRestaurantList(data);\r\n          } else {\r\n            console.error('Error: Response data is not an array');\r\n          }\r\n        } else {\r\n          console.error('Error:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchRestaurantData();\r\n  }, []); \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-4\">\r\n        <h1 className=\"mt-4\">Restaurant List</h1>\r\n        <div className=\"row\">\r\n          {restaurantList.map((restaurant) => (\r\n            <div key={restaurant._id} className=\"col-md-4 mb-4\">\r\n              <Link to={\"/display/\" + restaurant._id} style={{ textDecoration: \"none\" }}>\r\n                {/* Assuming RestaurantCard is a component */}\r\n                <div className=\"\">\r\n                  <RestaurantCard resData={restaurant} />\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}