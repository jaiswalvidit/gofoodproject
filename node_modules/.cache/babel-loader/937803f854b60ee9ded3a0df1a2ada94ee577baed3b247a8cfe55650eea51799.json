{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { MENU_API } from \"../constants\";\n// import { IMAGE_URL } from \"../constants\";\n// // import {useState} from \"react\";\n\n// import FoodDataCard from \"./FoodDataCard\";\n// import Shimmer from \"./Shimmer\";\n\n// const RestaurantMenu = () => {\n//   const [resInfo, setResInfo] = useState(null);\n//   const { resId } = useParams();\n//   const [isImageZoomed, setImageZoomed] = useState(false);\n\n//   useEffect(() => {\n//     const fetchDataAndSetResInfo = async () => {\n//       try {\n//         const data = await fetch(MENU_API + resId);\n//         const json = await data.json();\n//         console.log(json); // Log the entire JSON data to the console\n//         setResInfo(json.data);\n//       } catch (error) {\n//         console.error(\"Error fetching menu data:\", error);\n//       }\n//     };\n\n//     fetchDataAndSetResInfo();\n//   }, [resId]);\n\n//   if (resInfo === null) {\n//     return <div><Shimmer /></div>;\n//   }\n\n//   const {\n//     name,\n//     cuisines = [],\n//     costForTwoMessage,\n//     city,\n//     cloudinaryImageId,\n//     areaName,\n//     isOpen,\n//     avgRatingString,\n//   } = resInfo?.cards[0]?.card?.card?.info || {};\n\n//   const allItems = resInfo?.cards?.[resInfo?.cards.length - 1]?.groupedCard?.cardGroupMap?.REGULAR;\n\n//   return (\n//     <div style={{ minHeight: \"100vh\", background: \"rgba(255, 255, 0, 0.1)\" }}>\n//       <div className=\"container\">\n//         <div className=\"container pt-4\">\n//           <div className=\"row\">\n//             <div className=\"col-9\">\n//               <div className=\"card\">\n//                 <div className=\"card-body\">\n//                   <h1 className=\"card-title display-4 fw-bold text-primary\">{name}</h1>\n//                   <p className=\"card-text fs-4 fw-bold text-danger\">Cuisines: {cuisines.join(\", \")}</p>\n//                   {/* <p className=\"card-text fs-5 fw-bold text-secondary\">Cost for Two: {costForTwoMessage}</p> */}\n//                   <p className=\"card-text fs-5 fw-bold text-secondary\">{city}-{areaName}</p>\n//                   <p className=\"card-text fs-5 fw-bold text-secondary\">\n//                     Rating: {avgRatingString} stars\n//                   </p>\n//                   <p className=\"card-text fs-5 fw-bold \">\n//                     Status: {isOpen ? <span className=\"text-success\">Open Now</span> : <span className=\"text-danger\">Closed</span>}\n//                   </p>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"col-3 my-auto mx-auto \">\n//               <div className=\"card rounded\">\n//                 <div className=\"card-img-container\">\n//                   <img\n//                     className={`card-img-top rounded img-fluid ${isImageZoomed ? 'zoom-on-hover' : ''}`}\n//                     src={`${IMAGE_URL}${cloudinaryImageId}`}\n//                     alt={name}\n//                     onMouseOver={() => setImageZoomed(true)}\n//                     onMouseOut={() => setImageZoomed(false)}\n//                     onError={(e) => {\n//                       e.target.onerror = null;\n//                       e.target.src = \"path_to_alternate_image_or_text.png\";\n//                     }}\n//                   />\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n\n//         <h1 className=\"menu-header mt-4 fs-1 px-4\">MENU</h1>\n//         {allItems?.cards.slice(1, allItems.cards.length - 2).map((cardList, index) => {\n//           return (\n//             <div key={cardList?.card?.card?.id} className=\"mt-4\">\n//               {index > 0 && (\n//                 <div className=\"row\">\n//                   <div className=\"col-12 text-center\">\n//                     <i className=\"fas fa-divide\"></i>\n//                   </div>\n//                 </div>\n//               )}\n//               <h2 className=\"fw-bold fs-3 text-primary\">{cardList?.card?.card?.title}</h2>\n//               <div className=\"row\">\n//                 {cardList?.card?.card?.categories ? (\n//                   cardList?.card?.card?.categories.map((category) => (\n//                     <div key={category?.card?.id} className=\"mt-4\">\n//                       <h3 className=\"fw-bold fs-4\">{category?.card?.card?.title}</h3>\n//                       <div className=\"row\">\n//                         {category?.itemCards.map((item) => (\n//                           <div className=\"col-lg-4 col-md-6 col-sm-12 mb-3\" key={item?.card?.info?.id}>\n//                             <div>\n//                               <FoodDataCard\n//                                 foodItem={item?.card?.info}\n//                                 url={`${IMAGE_URL}${item?.card?.info?.imageId}`}\n//                               />\n//                             </div>\n//                           </div>\n//                         ))}\n//                       </div>\n//                     </div>\n//                   ))\n//                 ) : (\n//                   cardList?.card?.card?.itemCards.map((item) => (\n//                     <div className=\"col-lg-4 col-md-6  mb-4 col-sm-12\" key={item?.card?.info?.id}>\n//                       <div>\n//                         <FoodDataCard\n//                           foodItem={item?.card?.info}\n//                           url={`${IMAGE_URL}${item?.card?.info?.imageId}`}\n//                         />\n//                       </div>\n//                     </div>\n//                   ))\n//                 )}\n//               </div>\n//             </div>\n//           );\n//         })}\n//         {allItems.cards.length > 0 ? (\n//           <div className=\"menu-category\">\n//             <div className=\"row\">\n//               {/* Render menu categories here */}\n//             </div>\n//           </div>\n//         ) : (\n//           <div className=\"no-menu-items mt-4\">No menu items available.</div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RestaurantMenu;","map":{"version":3,"names":[],"sources":["D:/food_app/mernapp/src/components/RestaurantPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import { MENU_API } from \"../constants\";\r\n// import { IMAGE_URL } from \"../constants\";\r\n// // import {useState} from \"react\";\r\n\r\n// import FoodDataCard from \"./FoodDataCard\";\r\n// import Shimmer from \"./Shimmer\";\r\n\r\n// const RestaurantMenu = () => {\r\n//   const [resInfo, setResInfo] = useState(null);\r\n//   const { resId } = useParams();\r\n//   const [isImageZoomed, setImageZoomed] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchDataAndSetResInfo = async () => {\r\n//       try {\r\n//         const data = await fetch(MENU_API + resId);\r\n//         const json = await data.json();\r\n//         console.log(json); // Log the entire JSON data to the console\r\n//         setResInfo(json.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching menu data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchDataAndSetResInfo();\r\n//   }, [resId]);\r\n\r\n//   if (resInfo === null) {\r\n//     return <div><Shimmer /></div>;\r\n//   }\r\n\r\n//   const {\r\n//     name,\r\n//     cuisines = [],\r\n//     costForTwoMessage,\r\n//     city,\r\n//     cloudinaryImageId,\r\n//     areaName,\r\n//     isOpen,\r\n//     avgRatingString,\r\n//   } = resInfo?.cards[0]?.card?.card?.info || {};\r\n\r\n//   const allItems = resInfo?.cards?.[resInfo?.cards.length - 1]?.groupedCard?.cardGroupMap?.REGULAR;\r\n\r\n\r\n\r\n//   return (\r\n//     <div style={{ minHeight: \"100vh\", background: \"rgba(255, 255, 0, 0.1)\" }}>\r\n//       <div className=\"container\">\r\n//         <div className=\"container pt-4\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-9\">\r\n//               <div className=\"card\">\r\n//                 <div className=\"card-body\">\r\n//                   <h1 className=\"card-title display-4 fw-bold text-primary\">{name}</h1>\r\n//                   <p className=\"card-text fs-4 fw-bold text-danger\">Cuisines: {cuisines.join(\", \")}</p>\r\n//                   {/* <p className=\"card-text fs-5 fw-bold text-secondary\">Cost for Two: {costForTwoMessage}</p> */}\r\n//                   <p className=\"card-text fs-5 fw-bold text-secondary\">{city}-{areaName}</p>\r\n//                   <p className=\"card-text fs-5 fw-bold text-secondary\">\r\n//                     Rating: {avgRatingString} stars\r\n//                   </p>\r\n//                   <p className=\"card-text fs-5 fw-bold \">\r\n//                     Status: {isOpen ? <span className=\"text-success\">Open Now</span> : <span className=\"text-danger\">Closed</span>}\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"col-3 my-auto mx-auto \">\r\n//               <div className=\"card rounded\">\r\n//                 <div className=\"card-img-container\">\r\n//                   <img\r\n//                     className={`card-img-top rounded img-fluid ${isImageZoomed ? 'zoom-on-hover' : ''}`}\r\n//                     src={`${IMAGE_URL}${cloudinaryImageId}`}\r\n//                     alt={name}\r\n//                     onMouseOver={() => setImageZoomed(true)}\r\n//                     onMouseOut={() => setImageZoomed(false)}\r\n//                     onError={(e) => {\r\n//                       e.target.onerror = null;\r\n//                       e.target.src = \"path_to_alternate_image_or_text.png\";\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <h1 className=\"menu-header mt-4 fs-1 px-4\">MENU</h1>\r\n//         {allItems?.cards.slice(1, allItems.cards.length - 2).map((cardList, index) => {\r\n//           return (\r\n//             <div key={cardList?.card?.card?.id} className=\"mt-4\">\r\n//               {index > 0 && (\r\n//                 <div className=\"row\">\r\n//                   <div className=\"col-12 text-center\">\r\n//                     <i className=\"fas fa-divide\"></i>\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//               <h2 className=\"fw-bold fs-3 text-primary\">{cardList?.card?.card?.title}</h2>\r\n//               <div className=\"row\">\r\n//                 {cardList?.card?.card?.categories ? (\r\n//                   cardList?.card?.card?.categories.map((category) => (\r\n//                     <div key={category?.card?.id} className=\"mt-4\">\r\n//                       <h3 className=\"fw-bold fs-4\">{category?.card?.card?.title}</h3>\r\n//                       <div className=\"row\">\r\n//                         {category?.itemCards.map((item) => (\r\n//                           <div className=\"col-lg-4 col-md-6 col-sm-12 mb-3\" key={item?.card?.info?.id}>\r\n//                             <div>\r\n//                               <FoodDataCard\r\n//                                 foodItem={item?.card?.info}\r\n//                                 url={`${IMAGE_URL}${item?.card?.info?.imageId}`}\r\n//                               />\r\n//                             </div>\r\n//                           </div>\r\n//                         ))}\r\n//                       </div>\r\n//                     </div>\r\n//                   ))\r\n//                 ) : (\r\n//                   cardList?.card?.card?.itemCards.map((item) => (\r\n//                     <div className=\"col-lg-4 col-md-6  mb-4 col-sm-12\" key={item?.card?.info?.id}>\r\n//                       <div>\r\n//                         <FoodDataCard\r\n//                           foodItem={item?.card?.info}\r\n//                           url={`${IMAGE_URL}${item?.card?.info?.imageId}`}\r\n//                         />\r\n//                       </div>\r\n//                     </div>\r\n//                   ))\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//         {allItems.cards.length > 0 ? (\r\n//           <div className=\"menu-category\">\r\n//             <div className=\"row\">\r\n//               {/* Render menu categories here */}\r\n//             </div>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"no-menu-items mt-4\">No menu items available.</div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RestaurantMenu;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}